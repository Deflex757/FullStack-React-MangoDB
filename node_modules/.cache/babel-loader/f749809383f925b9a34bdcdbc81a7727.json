{"ast":null,"code":"import _classCallCheck from \"/Users/terryim/Desktop/indieproject/reactjs/datatemplate/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/terryim/Desktop/indieproject/reactjs/datatemplate/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/terryim/Desktop/indieproject/reactjs/datatemplate/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/terryim/Desktop/indieproject/reactjs/datatemplate/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/terryim/Desktop/indieproject/reactjs/datatemplate/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/terryim/Desktop/indieproject/reactjs/datatemplate/src/components/template.jsx\";\nimport React, { Component } from \"react\";\n\nvar Template =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Template, _Component);\n\n  function Template() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Template);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Template)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 0,\n      detail: [\"detail1\", \"detail2\", \"detail3\", \"detail14\", \"detail5\"]\n    };\n\n    _this.handleIncrement = function () {\n      _this.setState({\n        count: _this.state.count + 1\n      });\n    };\n\n    _this.decreaseIncrement = function () {\n      _this.setState({\n        count: _this.state.count - 1\n      });\n    };\n\n    _this.resetButton = function () {\n      _this.setState({\n        count: 0,\n        detail: [\"detail1\", \"detail2\", \"detail3\", \"detail14\", \"detail5\"]\n      });\n    };\n\n    _this.formantCount = function () {\n      var count = _this.state.count;\n      return count === 0 ? \"Zero\" : count;\n    };\n\n    _this.getBadgeClasses = function () {\n      var classes = \"badge m-2 badge-\";\n      classes += _this.state.count === 0 ? \"primary\" : \"warning\"; //no need to write badge-warning, badge-primary over\n\n      return classes;\n    };\n\n    return _this;\n  }\n\n  _createClass(Template, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"This is the component\", Component);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: this.getBadgeClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, this.formantCount()), React.createElement(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-success btn-sm m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Increase Value By 1\"), React.createElement(\"button\", {\n        onClick: this.decreaseIncrement,\n        className: \"btn btn-info btn-sm m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Decrease Value By 1\"), React.createElement(\"button\", {\n        Onclick: this.resetButton,\n        className: \"btn btn-danger btn-sm m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Reset Current Value to Zero\"));\n    }\n  }]);\n\n  return Template;\n}(Component);\n\nexport default Template;","map":{"version":3,"sources":["/Users/terryim/Desktop/indieproject/reactjs/datatemplate/src/components/template.jsx"],"names":["React","Component","Template","state","count","detail","handleIncrement","setState","decreaseIncrement","resetButton","formantCount","getBadgeClasses","classes","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAGMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,SAA9C;AAFJ,K;;UAORC,e,GAAkB,YAAM;AACpB,YAAKC,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AADhB,OAAd;AAGH,K;;UAEDI,iB,GAAoB,YAAM;AACtB,YAAKD,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB;AADhB,OAAd;AAGH,K;;UAEDK,W,GAAc,YAAM;AAChB,YAAKF,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAE,CADG;AAEVC,QAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,UAAlC,EAA8C,SAA9C;AAFE,OAAd;AAIH,K;;UAEDK,Y,GAAe,YAAM;AAAA,UACTN,KADS,GACC,MAAKD,KADN,CACTC,KADS;AAEjB,aAAOA,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH,K;;UAEDO,e,GAAkB,YAAM;AACpB,UAAIC,OAAO,GAAG,kBAAd;AACAA,MAAAA,OAAO,IAAI,MAAKT,KAAL,CAAWC,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD,CAFoB,CAEuC;;AAC3D,aAAOQ,OAAP;AACH,K;;;;;;;6BAEQ;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCb,SAArC;AACA,aAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAM,QAAA,SAAS,EAAE,KAAKU,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKD,YAAL,EAA1C,CADI,EAEJ;AAAQ,QAAA,OAAO,EAAE,KAAKJ,eAAtB;AAAuC,QAAA,SAAS,EAAC,4BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFI,EAGJ;AAAQ,QAAA,OAAO,EAAE,KAAKE,iBAAtB;AAAyC,QAAA,SAAS,EAAC,yBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHI,EAIJ;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAmC,QAAA,SAAS,EAAC,2BAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAJI,CAAR;AAQH;;;;EAhDkBR,S;;AAoDvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\n\nclass Template extends Component {\n    state = {\n        count: 0,\n        detail: [\"detail1\", \"detail2\", \"detail3\", \"detail14\", \"detail5\",]\n    };\n\n\n\n    handleIncrement = () => {\n        this.setState({\n            count: this.state.count + 1\n        });\n    };\n\n    decreaseIncrement = () => {\n        this.setState({\n            count: this.state.count - 1\n        });\n    };\n\n    resetButton = () => {\n        this.setState({\n            count: 0,\n            detail: [\"detail1\", \"detail2\", \"detail3\", \"detail14\", \"detail5\",]\n        })\n    };\n\n    formantCount = () => {\n        const { count } = this.state;\n        return count === 0 ? \"Zero\" : count\n    };\n\n    getBadgeClasses = () => {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"primary\" : \"warning\"; //no need to write badge-warning, badge-primary over\n        return classes;\n    }\n\n    render() {\n        console.log(\"This is the component\", Component);\n        return (<React.Fragment>\n            <span className={this.getBadgeClasses()}>{this.formantCount()}</span>\n            <button onClick={this.handleIncrement} className=\"btn btn-success btn-sm m-1\">Increase Value By 1</button>\n            <button onClick={this.decreaseIncrement} className=\"btn btn-info btn-sm m-1\">Decrease Value By 1</button>\n            <button Onclick={this.resetButton} className=\"btn btn-danger btn-sm m-1\">Reset Current Value to Zero</button>\n        </React.Fragment >)\n\n\n    }\n}\n\n\nexport default Template;"]},"metadata":{},"sourceType":"module"}